name: Scrape Data, build and upload Model

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.1"
          cache: "pip"

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: install python packages
        run: pip install -r requirements.txt

      - name: setup playwright
        run: playwright install

      #- name: scrape
      #  env:
      #    MONGODB_URI: ${{ secrets.MONGODB_URI }}
      #  run: python scrape/scrape.py
      #  continue-on-error: true

      - name: train and optimize model
        env:
          AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: python model/forest.py

      - name: upload model
        env:
          AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
        run: python model/blob_accessor.py

      - name: Generate Docker Tag
        id: docker_tag
        run: echo "DOCKER_TAG=lukasweibel99/rentestimator:build-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t $DOCKER_TAG .

      - name: Log in to Dockerhub and push image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push $DOCKER_TAG

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: mdm-rentestimator-webapp
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: $DOCKER_TAG
